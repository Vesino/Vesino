version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: vesino_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start
    networks:
      - db-net

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: vesino_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - db-net

  redis:
    image: redis:3.2
    networks:
      - db-net

  celeryworker:
    <<: *django
    image: vesino_local_celeryworker
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celeryworker
    networks:
      - db-net

  celerybeat:
    <<: *django
    image: vesino_local_celerybeat
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celerybeat
    networks:
      - db-net

  flower:
    <<: *django
    image: vesino_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
    networks:
      - db-net

  frontend:
    restart: always
    command : npm start
    container_name: front
    build:
      context: ./vesino-web/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - django
    networks:
      - db-net

networks:
  db-net:
    driver: bridge
